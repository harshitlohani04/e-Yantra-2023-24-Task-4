# -*- coding: utf-8 -*-
"""2b.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ssakgzs6LTjXJfmr60sFp6EfxS4xH7X2
"""

import keras
from keras.applications.vgg16 import VGG16
from keras.models import Sequential
from keras.layers import Dense, Flatten, Dropout
from keras.callbacks import ModelCheckpoint


base_model = VGG16(weights='imagenet', include_top=False, input_shape=(50, 50, 3), pooling="max")

for layer in base_model.layers:
    layer.trainable = False

model = Sequential([
    base_model,
    Flatten(),
    Dense(512, activation='relu'),
    Dense(512, activation='relu'),
    Dropout(0.3),
    Dense(5, activation='softmax')  # Make sure the output units match the number of classes (5)
])
# model = Model(inputs=base_model.input, outputs=output)


train_data = keras.preprocessing.image_dataset_from_directory(
    'Images',
    labels='inferred',
    validation_split=0.1,
    label_mode="int",
    batch_size=32,
    seed=42,
    image_size=(50, 50),
    subset='training',
)

val_data = keras.preprocessing.image_dataset_from_directory(
    'Images',
    labels='inferred',
    validation_split=0.1,
    label_mode="int",
    batch_size=32,
    seed=42,
    image_size=(50, 50),
    subset='validation',
)

model.compile(optimizer='adam', loss="sparse_categorical_crossentropy", metrics=['accuracy'])

mc = ModelCheckpoint("./bestmodel_task2c.h5", monitor='val_accuracy', verbose=1, save_best_only=True)

cb = [mc]

history = model.fit(train_data, validation_data=val_data, epochs=10, callbacks=cb, batch_size=32)
